/*
 * The MIT License
 * Copyright Â© 2025 Johns Hopkins University Applied Physics Laboratory
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package terrasaur.utils.saaPlotLib.colorMaps.tables;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;

/**
 * IDL Color tables
 *
 * <pre>
 * {@code
 * loadct, index, rgb_table=rgb_table
 * n_colors = n_elements(rgb_table[*,0])
 *
 * table = rgb_table[*,0]*256L*256 + rgb_table[*,1]*256L + rgb_table[*,2]
 *
 * print, 'private static int [] colors', index, ' = {'
 * for i=0, n_colors-1 do begin
 * print, table[i], ', '
 * endfor
 * print, '}'
 * }
 * </pre>
 *
 *
 * @author nairah1
 *
 */
public class IDL extends ColorTable {

  private static final int[] colors74 = {
    10355010, 10486595, 10618435, 10815556, 10947396, 11078981, 11210821, 11342406, 11539782,
    11671367, 11802951, 11934792, 12066376, 12263753, 12395337, 12527178, 12658762, 12790347,
    12987723, 13119308, 13251148, 13382733, 13514573, 13711694, 13843534, 13975119, 14041167,
    14107214, 14238542, 14304589, 14370637, 14436684, 14502732, 14634059, 14700107, 14766154,
    14832202, 14898249, 15029833, 15095625, 15161672, 15227720, 15293767, 15359815, 15491142,
    15557190, 15623237, 15689285, 15755332, 15886660, 15952707, 16018755, 16019524, 16085573,
    16086343, 16086856, 16153161, 16153930, 16219979, 16220749, 16221262, 16287567, 16288336,
    16288849, 16355155, 16355668, 16356437, 16422742, 16423255, 16424025, 16490074, 16490843,
    16557148, 16557661, 16558431, 16624480, 16625249, 16625763, 16626276, 16626790, 16627303,
    16627817, 16628331, 16628588, 16629102, 16629616, 16630129, 16630643, 16631156, 16697206,
    16697720, 16698233, 16698747, 16699260, 16699774, 16700288, 16700545, 16701059, 16701573,
    16702086, 16702600, 16703113, 16703627, 16703885, 16704143, 16704657, 16704915, 16705173,
    16705431, 16705946, 16706204, 16706462, 16706720, 16707234, 16707492, 16773286, 16773544,
    16774058, 16774316, 16774574, 16774832, 16775347, 16775605, 16775863, 16776121, 16776635,
    16776893, 16777151, 16711614, 16645820, 16580283, 16514489, 16448952, 16383414, 16317621,
    16252083, 16186546, 16120752, 16055215, 15989421, 15989420, 15923882, 15858089, 15792551,
    15726758, 15661220, 15595683, 15529889, 15464352, 15398814, 15333021, 15267483, 15201690,
    15136152, 15004824, 14807961, 14676633, 14545306, 14348442, 14217115, 14020251, 13888924,
    13757596, 13560733, 13429405, 13298078, 13101470, 12970143, 12838815, 12641952, 12510624,
    12379297, 12182433, 12051106, 11854242, 11722915, 11591587, 11394724, 11263396, 11066532,
    10935204, 10738340, 10541476, 10410148, 10213284, 10016420, 9885092, 9688228, 9491364, 9360036,
    9163172, 9031845, 8834725, 8637861, 8506533, 8309669, 8112805, 7981477, 7784613, 7587749,
    7456421, 7259557, 7062693, 6931365, 6734501, 6602918, 6471079, 6339496, 6207913, 6076074,
    5944491, 5747372, 5615533, 5483950, 5352367, 5220528, 5088945, 4957361, 4825778, 4693939,
    4562356, 4430773, 4298934, 4101815, 3970232, 3838393, 3706810, 3575227, 3443388, 3311805,
    3442364, 3507387, 3637690, 3768249, 3833272, 3963831, 4094390, 4224693, 4289716, 4420275,
    4550834, 4615857, 4746416, 4876718, 4941741, 5072300, 5202859, 5267882, 5398185, 5528744,
    5659303, 5724326, 5854885, 5985188, 6050211, 6180770
  };
  public static final IDL CBSPECTRAL = new IDL(colors74, FAMILY.LINEAR);

  private final int[] colors;

  private IDL(int[] colors, ColorTable.FAMILY family) {
    super(family);
    this.colors = colors;
  }

  @Override
  public List<Color> getColors() {
    List<Color> colors = new ArrayList<>();
    for (int color : this.colors) colors.add(new Color(color));
    return colors;
  }
}
